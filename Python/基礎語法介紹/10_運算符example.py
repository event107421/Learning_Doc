# 算術運算符
# +(加)：兩個對象相加
# -(減)：得到負數或是一個數減去另一個數
# *(乘)：兩個數相乘或是返回一個被重複若干次的字符串
# /(除)：x 除以 y
# %(取模)：返回除法的餘數
# **(冪)：返回x的y次冪
# //(取整除)：返回商的整數部分

a = 21
b = 10
c = 0
 
c = a + b
print ("1 - c 的值為：", c)
 
c = a - b
print ("2 - c 的值為：", c)
 
c = a * b
print ("3 - c 的值為：", c)
 
c = a / b
print ("4 - c 的值為：", c)
 
c = a % b
print ("5 - c 的值為：", c)

a = 10
b = 5
c = a//b 
print ("7 - c 的值為：", c)

# 比較運算符
# ==(等於)：比較對像是否相等
# !=(不等於)：比較兩個對像是否不相等
# >(大於)：返回x是否大於y
# <(小於)：返回x是否小於y。所有比較運算符返回1表示真，返回0表示假。這分別與特殊的變量True和False等價。注意，這些變量名的大寫。
# >=(大於等於)：返回x是否大於等於y。
# <=(小於等於)：返回x是否小於等於y。

a = 21
b = 10
c = 0
 
if ( a == b ):
   print ("1 - a 等於 b")
else:
   print ("1 - a 不等於 b")
 
if ( a != b ):
   print ("2 - a 不等於 b")
else:
   print ("2 - a 等於 b")
 
if ( a < b ):
   print ("3 - a 小於 b")
else:
   print ("3 - a 大於等於 b")
 
if ( a > b ):
   print ("4 - a 大於 b")
else:
   print ("4 - a 小於等於 b")

# 賦值運算符
# =(簡單的賦值運算符)： c = a + b 將 a + b 的運算結果賦值為 c
# +=(加法賦值運算符)：c += a 等效於 c = c + a
# -=(減法賦值運算符)：c -= a 等效於 c = c - a
# *=(乘法賦值運算符)：c *= a 等效於 c = c * a
# /=(除法賦值運算符)：c /= a 等效於 c = c / a
# %=(取模賦值運算符)：c %= a 等效於 c = c % a
# **=(冪賦值運算符)：c **= a 等效於 c = c ** a
# //=(取整除賦值運算符)：c //= a 等效於 c = c // a

a = 21
b = 10
c = 0
 
c = a + b
print ("1 - c 的值為：", c)
 
c += a
print ("2 - c 的值為：", c)
 
c *= a
print ("3 - c 的值為：", c)
 
c /= a 
print ("4 - c 的值為：", c)
 
c = 2
c %= a
print ("5 - c 的值為：", c)
 
c **= a
print ("6 - c 的值為：", c)
 
c //= a
print ("7 - c 的值為：", c)

# &(按位與運算符)：參與運算的兩個值,如果兩個相應位都為1,則該位的結果為1,否則為0
# |(按位或運算符)：只要對應的二個二進位有一個為1時，結果位就為1。
# ^(按位異或運算符)：當兩對應的二進位相異時，結果為1
# ~(按位取反運算符)：對數據的每個二進制位取反,即把1變為0,把0變為1。 ~x 類似於 -x-1
# <<(左移動運算符)：運算數的各二進位全部左移若干位，由"<<"右邊的數指定移動的位數，高位丟棄，低位補0
# >>(右移動運算符)：把">>"左邊的運算數的各二進位全部右移若干位，">>"右邊的數指定移動的位數

# 60 = 0011 1100 
a = 60
# 13 = 0000 1101             
b = 13
c = 0

# 12 = 0000 1100
c = a & b;
print ("1 - c 的值為：", c)

# 61 = 0011 1101 
c = a | b;
print ("2 - c 的值為：", c)

# 49 = 0011 0001
c = a ^ b;
print ("3 - c 的值為：", c)

# -61 = 1100 0011
c = ~a;
print ("4 - c 的值為：", c)

# 240 = 1111 0000
c = a << 2;
print ("5 - c 的值為：", c)

# 15 = 0000 1111
c = a >> 2;
print ("6 - c 的值為：", c)

# 邏輯運算符
# and x and y(布爾"與")：如果 x 為 False，x and y 返回 False，否則它返回 y 的計算值。
# or  x or y(布爾"或")：如果 x 是 True，它返回 x 的值，否則它返回 y 的計算值。
# not not x(布爾"非")：如果 x 為 True，返回 False 。如果 x 為 False，它返回 True。

a = 0
if ( a and b ):
   print ("3 - 變量 a 和 b 都為 true")
else:
   print ("3 - 變量 a 和 b 有一個不為 true")
 
if ( a or b ):
   print ("4 - 變量 a 和 b 都為 true，或其中一個變量為 true")
else:
   print ("4 - 變量 a 和 b 都不為 true")
 
if not( a and b ):
   print ("5 - 變量 a 和 b 都為 false，或其中一個變量為 false")
else:
   print ("5 - 變量 a 和 b 都為 true")
   
# 成員運算符
# in：如果在指定的序列中找到值返回 True，否則返回 False。
# not in：如果在指定的序列中沒有找到值返回 True，否則返回 False。

a = 10
b = 20
list = [1, 2, 3, 4, 5 ];
 
if ( a in list ):
   print ("1 - 變量 a 在給定的列表中 list 中")
else:
   print ("1 - 變量 a 不在給定的列表中 list 中")
 
if ( b not in list ):
   print ("2 - 變量 b 不在給定的列表中 list 中")
else:
   print ("2 - 變量 b 在給定的列表中 list 中")
   
# 身份運算符
# is  is：是判斷兩個標識符是不是引用自一個對象，x is y，類似 id(x) == id(y)，如果引用的是同一個對象則返回 True，否則返回 False
# is not is not：是判斷兩個標識符是不是引用自不同對象，x is not y，類似 id(a) != id(b)。如果引用的不是同一個對象則返回結果 True，否則返回 False。

a = 20
b = 30
 
if ( a is b ):
   print ("3 - a 和 b 有相同的標識")
else:
   print ("3 - a 和 b 沒有相同的標識")
 
if ( a is not b ):
   print ("4 - a 和 b 沒有相同的標識")
else:
   print ("4 - a 和 b 有相同的標識")
   
# **：指數 (最高優先級)
# ~ + -：按位翻轉，一元加號和減號 (最後兩個的方法名為 +@ 和 -@)
# * / % //：乘，除，取模和取整除
# + -：加法減法
# >> <<：右移，左移運算符
# &：位 'AND'
# ^ |：位運算符
# <= < > >=：比較運算符
# <> == !=：等於運算符
# = %= /= //= -= += *= **=：賦值運算符
# is is not：身份運算符
# in not in：成員運算符
# and or not：邏輯運算符

a = 20
b = 10
c = 15
d = 5
e = 0

#( 30 * 15 ) / 5
e = (a + b) * c / d
print ("(a + b) * c / d 運算結果為：",  e)

# (30 * 15 ) / 5
e = ((a + b) * c) / d
print ("((a + b) * c) / d 運算結果為：",  e)

# (30) * (15/5)
e = (a + b) * (c / d);
print ("(a + b) * (c / d) 運算結果為：",  e)

#  20 + (150/5)
e = a + (b * c) / d;
print ("a + (b * c) / d 運算結果為：",  e)